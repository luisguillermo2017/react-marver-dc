{"version":3,"sources":["components/login/LoginScreen.js","components/ui/Navbar.js","components/hero/HeroCard.js","data/heroes.js","components/hero/HeroList.js","selectors/getHeroesByPublisher.js","components/dc/DcScreen.js","components/marvel/MarvelScreen.js","components/search/SearchScreen.js","hooks/useForm.js","selectors/getHeroesByName.js","components/hero/HeroScreen.js","selectors/getHeroById.js","routers/DashboardRoutes.js","routers/AppRouter.js","HeroesApp.js","index.js"],"names":["LoginScreen","navigate","useNavigate","className","onClick","replace","Navbar","to","isActive","HeroCard","id","superhero","alter_ego","publisher","first_appearance","characters","imagePath","src","alt","heroes","HeroList","useMemo","includes","Error","filter","hero","getHeroesByPublisher","map","DcScreen","MarvelScreen","SearchScreen","location","useLocation","queryString","parse","search","q","initialState","useState","values","setValues","target","name","value","useForm","searchText","formValues","handleInputChange","heroesFileted","console","log","length","toLowerCase","getHeroesByName","onSubmit","e","preventDefault","type","placeholder","autoComplete","onChange","HeroScreen","heroeId","useParams","find","getHeroById","DashboardRoutes","path","element","AppRouter","HeroesApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f6a04b45.chunk.js","sourcesContent":["import { useNavigate } from 'react-router-dom';\n\n\nexport const LoginScreen = () => {\n\n    const navigate = useNavigate();\n\n    const handleLogin = () => {\n        navigate('/marvel', {\n            replace: true\n        });\n    }\n\n\n    return (\n        <div className=\"container mt-5\">\n            <h1>Login</h1>\n            <hr />\n\n            <button \n                className=\"btn btn-primary\"\n                onClick={ handleLogin }\n                >\n                    Login\n            </button>\n        </div>\n    )\n}\n","import React from 'react'\nimport { Link, NavLink, useNavigate } from 'react-router-dom'\n\n\nexport const Navbar = () => {\n\n    const navigate = useNavigate();\n\n    const handleLogout = () => {\n        navigate('/login', {\n            replace: true\n        });\n    }\n\n    return (\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\n            \n            <Link \n                className=\"navbar-brand\" \n                to=\"/\"\n            >\n                Asociaciones\n            </Link>\n\n            <div className=\"navbar-collapse\">\n                <div className=\"navbar-nav\">\n\n                    <NavLink \n                        className={ ({ isActive }) => 'nav-item nav-link ' + (isActive ? 'active' : '') }\n                        to=\"/marvel\"\n                    >\n                        Marvel\n                    </NavLink>\n\n                    <NavLink \n                        className={ ({ isActive }) => 'nav-item nav-link ' + (isActive ? 'active' : '') }\n                        to=\"/dc\"\n                    >\n                        DC\n                    </NavLink>\n\n                    <NavLink \n                        className={ ({ isActive }) => 'nav-item nav-link ' + (isActive ? 'active' : '') }\n                        to=\"/search\"\n                    >\n                        Search\n                    </NavLink>\n                </div>\n            </div>\n\n            <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2 d-flex justify-content-end\">\n                <ul className=\"navbar-nav ml-auto\">\n\n                    <span className=\"nav-item nav-link text-info\">\n                        Fernando\n                    </span>\n                    \n                    <button \n                        className=\"nav-item nav-link btn\" \n                        onClick={ handleLogout }\n                    >\n                        Logout\n                    </button>\n                </ul>\n            </div>\n        </nav>\n    )\n}","import { Link } from 'react-router-dom'\n\n\nexport const HeroCard = ({\n    id,\n    superhero,\n    publisher,\n    alter_ego,\n    first_appearance,\n    characters,\n}) => {\n\n    const imagePath = `/assets/${id}.jpg`;\n\n    return (\n        <div className=\"col animate__animated animate__fadeIn\">\n            <div className=\"card\">\n                \n                <div className=\"row no-gutters\">\n                    <div className=\"col-4\">\n                        <img src={ imagePath } className=\"card-img\" alt={superhero} />\n                    </div>\n                    <div className=\"col-8\">\n\n                        <div className=\"card-body\">\n\n                            <h5 className=\"card-title\">{superhero}</h5>\n                            <p className=\"card-text\">{alter_ego}</p>\n\n                            {\n                                ( alter_ego !== characters ) \n                                    && <p className=\"text-muted\">{ characters }</p>\n                            }\n\n                            <p className=\"card-text\">\n                                <small className=\"text-muted\">{ first_appearance }</small>\n                            </p>\n\n                            \n                            <Link to={`/hero/${id}`}>\n                                Más...\n                            </Link>\n\n                        </div>\n\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    )\n}\n","export const heroes = [\n    {\n        'id': 'dc-batman',\n        'superhero':'Batman', \n        'publisher':'DC Comics', \n        'alter_ego':'Bruce Wayne',\n        'first_appearance':'Detective Comics #27',\n        'characters':'Bruce Wayne'\n    },\n    {\n        'id': 'dc-superman',\n        'superhero':'Superman', \n        'publisher':'DC Comics', \n        'alter_ego':'Kal-El',\n        'first_appearance':'Action Comics #1',\n        'characters':'Kal-El'\n    },\n    {\n        'id': 'dc-flash',\n        'superhero':'Flash', \n        'publisher':'DC Comics', \n        'alter_ego':'Jay Garrick',\n        'first_appearance':'Flash Comics #1',\n        'characters':'Jay Garrick, Barry Allen, Wally West, Bart Allen'\n    },\n    {\n        'id': 'dc-green',\n        'superhero':'Green Lantern', \n        'publisher':'DC Comics', \n        'alter_ego':'Alan Scott',\n        'first_appearance':'All-American Comics #16',\n        'characters':'Alan Scott, Hal Jordan, Guy Gardner, John Stewart, Kyle Raynor, Jade, Sinestro, Simon Baz'\n    },\n    {\n        'id': 'dc-arrow',\n        'superhero':'Green Arrow', \n        'publisher':'DC Comics', \n        'alter_ego':'Oliver Queen',\n        'first_appearance':'More Fun Comics #73',\n        'characters':'Oliver Queen'\n    },\n    {\n        'id': 'dc-wonder',\n        'superhero':'Wonder Woman', \n        'publisher':'DC Comics', \n        'alter_ego':'Princess Diana',\n        'first_appearance':'All Star Comics #8',\n        'characters':'Princess Diana'\n    },\n    {\n        'id': 'dc-martian',\n        'superhero':'Martian Manhunter', \n        'publisher':'DC Comics', \n        'alter_ego':'J\\'onn J\\'onzz',\n        'first_appearance':'Detective Comics #225',\n        'characters':'Martian Manhunter'\n    },\n    {\n        'id': 'dc-robin',\n        'superhero':'Robin/Nightwing', \n        'publisher':'DC Comics', \n        'alter_ego':'Dick Grayson',\n        'first_appearance':'Detective Comics #38',\n        'characters':'Dick Grayson'\n    },\n    {\n        'id': 'dc-blue',\n        'superhero':'Blue Beetle', \n        'publisher':'DC Comics', \n        'alter_ego':'Dan Garret',\n        'first_appearance':'Mystery Men Comics #1',\n        'characters':'Dan Garret, Ted Kord, Jaime Reyes'\n    },\n    {\n        'id': 'dc-black',\n        'superhero':'Black Canary', \n        'publisher':'DC Comics', \n        'alter_ego':'Dinah Drake',\n        'first_appearance':'Flash Comics #86',\n        'characters':'Dinah Drake, Dinah Lance'\n    },\n    {\n        'id': 'marvel-spider',\n        'superhero':'Spider Man', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Peter Parker',\n        'first_appearance':'Amazing Fantasy #15',\n        'characters':'Peter Parker'\n    },\n    {\n        'id': 'marvel-captain',\n        'superhero':'Captain America', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Steve Rogers',\n        'first_appearance':'Captain America Comics #1',\n        'characters':'Steve Rogers'\n    },\n    {\n        'id': 'marvel-iron',\n        'superhero':'Iron Man', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Tony Stark',\n        'first_appearance':'Tales of Suspense #39',\n        'characters':'Tony Stark'\n    },\n    {\n        'id': 'marvel-thor',\n        'superhero':'Thor', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Thor Odinson',\n        'first_appearance':'Journey into Myster #83',\n        'characters':'Thor Odinson'\n    },\n    {\n        'id': 'marvel-hulk',\n        'superhero':'Hulk', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Bruce Banner',\n        'first_appearance':'The Incredible Hulk #1',\n        'characters':'Bruce Banner'\n    },\n    {\n        'id': 'marvel-wolverine',\n        'superhero':'Wolverine', \n        'publisher':'Marvel Comics', \n        'alter_ego':'James Howlett',\n        'first_appearance':'The Incredible Hulk #180',\n        'characters':'James Howlett'\n    },\n    {\n        'id': 'marvel-daredevil',\n        'superhero':'Daredevil', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Matthew Michael Murdock',\n        'first_appearance':'Daredevil #1',\n        'characters':'Matthew Michael Murdock'\n    },\n    {\n        'id': 'marvel-hawkeye',\n        'superhero':'Hawkeye', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Clinton Francis Barton',\n        'first_appearance':'Tales of Suspense #57',\n        'characters':'Clinton Francis Barton'\n    },\n    {\n        'id': 'marvel-cyclops',\n        'superhero':'Cyclops', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Scott Summers',\n        'first_appearance':'X-Men #1',\n        'characters':'Scott Summers'\n    },\n    {\n        'id': 'marvel-silver',\n        'superhero':'Silver Surfer', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Norrin Radd',\n        'first_appearance':'The Fantastic Four #48',\n        'characters':'Norrin Radd'\n    }\n]","import { useMemo } from 'react';\n\nimport { HeroCard } from './HeroCard';\nimport { getHeroesByPublisher } from '../../selectors/getHeroesByPublisher';\n\nexport const HeroList = ({ publisher }) => {\n\n    const heroes = useMemo( () => getHeroesByPublisher( publisher ), [ publisher ] );\n\n    return (\n        <div className=\"row rows-cols-1 row-cols-md-3 g-3 animate__animated animate__fadeIn\">\n            {\n                heroes.map( hero => (\n                    <HeroCard \n                        key={ hero.id } \n                        { ...hero }\n                    />\n                ))\n            }\n        </div>\n    )\n}\n","import { heroes } from '../data/heroes';\n\n\nexport const getHeroesByPublisher = ( publisher ) => {\n\n    const validPublishers = ['DC Comics', 'Marvel Comics'];\n    if( !validPublishers.includes( publisher ) ) {\n        throw new Error( `${ publisher } is not a valid publisher` );\n    }\n\n    return heroes.filter( hero => hero.publisher === publisher );\n}\n","import { HeroList } from '../hero/HeroList';\n\n\nexport const DcScreen = () => {\n    return (\n        <div>\n            <h1>DCScreen</h1>\n            <hr />\n\n            <HeroList publisher=\"DC Comics\" />\n\n        </div>\n    )\n}\n","import { HeroList } from '../hero/HeroList'\n\n\nexport const MarvelScreen = () => {\n    return (\n        <div>\n            <h1>MarvelScreen</h1>\n            <hr />\n\n            <HeroList publisher=\"Marvel Comics\" />\n\n        </div>\n    )\n}\n","import { useMemo } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport queryString from 'query-string'\n\nimport { useForm } from '../../hooks/useForm';\nimport { getHeroesByName } from '../../selectors/getHeroesByName';\nimport { HeroCard } from '../hero/HeroCard';\n\n\nexport const SearchScreen = () => {\n\n    const navigate = useNavigate();\n    const location = useLocation();\n\n    const { q = '' } = queryString.parse(location.search);\n    \n    const [ formValues, handleInputChange ] = useForm({\n        searchText: q,\n    });\n\n    const { searchText } = formValues;\n\n    const heroesFileted = useMemo( () => getHeroesByName(q), [q] );\n\n\n    const handleSearch = (e) => {\n        e.preventDefault();\n        navigate(`?q=${ searchText }`)\n    }\n\n\n    return (\n        <>\n            <h1>Búsquedas</h1>\n            <hr />\n\n            <div className=\"row\">\n\n                <div className=\"col-5\">\n                    <h4>Buscar</h4>\n                    <hr />\n\n                    <form onSubmit={ handleSearch }>\n                        <input \n                            type=\"text\"\n                            placeholder=\"Buscar un héroe\"\n                            className=\"form-control\"\n                            name=\"searchText\"\n                            autoComplete=\"off\"\n                            value={ searchText }\n                            onChange={ handleInputChange }\n                        />\n\n\n                        <button \n                            className=\"btn btn-outline-primary mt-1\"\n                            type=\"submit\">\n                            Buscar...\n                        </button>\n\n                    </form>\n\n\n                </div>\n\n                <div className=\"col-7\">\n                    <h4>Resultados</h4>\n                    <hr />\n\n                    {\n                        (q === '')\n                            ? <div className=\"alert alert-info\"> Buscar un héroe </div>\n                            : ( heroesFileted.length === 0 ) \n                                && <div className=\"alert alert-danger\"> No hay resultados: { q } </div>\n                    }\n\n\n                    {\n                        heroesFileted.map(hero => (\n                            <HeroCard \n                                key={ hero.id }\n                                { ...hero }\n                            />\n                        ))\n                    }\n\n\n                </div>\n\n            </div>\n\n        </>\n    )\n}\n","import { useState } from 'react';\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues( initialState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}\n","import { heroes } from '../data/heroes';\n\n\nexport const getHeroesByName = ( name = '') => {\n    \n    console.log('getHeroesByName called');\n\n    if ( name.length === 0 ) {\n        return [];\n    }\n\n    name = name.toLowerCase();\n    return heroes.filter(hero => hero.superhero.toLowerCase().includes(name));\n\n}","import { useMemo } from 'react';\nimport { useParams, Navigate, useNavigate } from 'react-router-dom'\nimport { getHeroById } from '../../selectors/getHeroById';\n\n\nexport const HeroScreen = () => {\n\n    const { heroeId } = useParams();\n    const navigate = useNavigate()\n\n    const hero = useMemo( () => getHeroById(heroeId), [ heroeId ]);\n    \n    \n\n    const handleReturn = () => {\n        navigate( -1 );\n    }\n\n\n    if (!hero) {\n        return <Navigate to='/' />\n    }\n    \n    const {\n        id,\n        superhero,\n        publisher,\n        alter_ego,\n        first_appearance,\n        characters\n    } = hero;\n\n    const imagePath = `/assets/${ id }.jpg`;\n\n    return (\n        <div className=\"row mt-5\">\n            <div className=\"col-4\">\n                <img \n                    src={ imagePath } \n                    alt={ superhero }\n                    className=\"img-thumbnail animate__animated animate__fadeInLeft\"\n                />\n            </div>\n\n            <div className=\"col-8 animate__animated animate__fadeIn\">\n                <h3>{ hero.superhero }</h3>\n                <ul className=\"list-group list-group-flush\">\n                    <li className=\"list-group-item\"> <b>Alter ego:</b> { alter_ego } </li>\n                    <li className=\"list-group-item\"> <b>Publisher:</b> { publisher } </li>\n                    <li className=\"list-group-item\"> <b>First Appearance:</b> { first_appearance } </li>\n                </ul>\n\n                <h5 className=\"mt-3\">Characters</h5>\n                <p>{ characters }</p>\n\n                <button\n                    className=\"btn btn-outline-info\"\n                    onClick={ handleReturn }\n                >\n                    Regresar \n                </button>\n\n            </div>\n\n        </div>\n    )\n}\n","import { heroes } from '../data/heroes';\n\n\nexport const getHeroById = ( id = '' ) => {\n    console.log('getHeroById called');\n    return heroes.find( hero => hero.id === id );\n}","import { Routes, Route } from 'react-router-dom';\n\nimport { Navbar } from '../components/ui/Navbar';\n\nimport { DcScreen } from '../components/dc/DcScreen';\nimport { MarvelScreen } from '../components/marvel/MarvelScreen';\nimport { SearchScreen } from '../components/search/SearchScreen';\nimport { HeroScreen } from '../components/hero/HeroScreen';\n\n\nexport const DashboardRoutes = () => {\n    return (\n        <>\n            <Navbar />\n\n            <div className=\"container\">\n                <Routes>\n                    <Route path=\"marvel\" element={<MarvelScreen />} />\n                    <Route path=\"dc\" element={<DcScreen />} />\n\n                    <Route path=\"search\" element={<SearchScreen />} />\n                    <Route path=\"hero/:heroeId\" element={<HeroScreen />} />\n\n                    <Route path=\"/\" element={<MarvelScreen />} />\n\n                </Routes>\n            </div>\n        </>\n    )\n}\n","import { Routes, Route, BrowserRouter } from 'react-router-dom';\n\nimport { LoginScreen } from '../components/login/LoginScreen';\n\nimport { DashboardRoutes } from './DashboardRoutes';\n\n\n\nexport const AppRouter = () => {\n    return (\n        <BrowserRouter>\n            \n            <Routes>\n                \n                <Route path=\"/login\" element={<LoginScreen />} />\n\n                <Route path=\"/*\" element={ <DashboardRoutes />  } />\n\n            </Routes>\n        </BrowserRouter>\n    )\n}\n","import { AppRouter } from './routers/AppRouter';\n\n\nexport const HeroesApp = () => {\n    return (\n        <AppRouter />\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { HeroesApp } from './HeroesApp';\n\n\nReactDOM.render(\n    <HeroesApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}